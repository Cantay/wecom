<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <record id="wxwork_jsapi_base_checkJsApi" model="wxwork.jsapi.interface">
            <field name="name">判断当前客户端版本是否支持指定JS接口</field>
            <field name="function_name">checkJsApi</field>
            <field name="type">base</field>
            <field name="example" type="html">
<pre>
wx.checkJsApi({
    jsApiList: ['chooseImage'], // 需要检测的JS接口列表
    success: function(res) {
        // 以键值对的形式返回，可用的api值true，不可用为false
        // 如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
    }
});
</pre>
            </field>
            <field name="description"></field>
        </record>

        <record id="wxwork_jsapi_base_agentConfig" model="wxwork.jsapi.interface">
            <field name="name">通过agentConfig注入应用的权限</field>
            <field name="function_name">agentConfig</field>
            <field name="type">base</field>
            <field name="example" type="html">
<pre>
wx.agentConfig({
    corpid: '', // 必填，企业微信的corpid，必须与当前登录的企业一致
    agentid: '', // 必填，企业微信的应用id （e.g. 1000247）
    timestamp: , // 必填，生成签名的时间戳
    nonceStr: '', // 必填，生成签名的随机串
    signature: '',// 必填，签名，见附录-JS-SDK使用权限签名算法
    jsApiList: ['selectExternalContact'], //必填，传入需要使用的接口名称
    success: function(res) {
        // 回调
    },
    fail: function(res) {
        if(res.errMsg.indexOf('function not exist') > -1){
            alert('版本过低请升级')
        }
    }
});</pre>
            </field>
            <field name="description" type="html">
<p>生成签名算法详见：
<a target="_blank" href="https://open.work.weixin.qq.com/api/doc/90000/90136/90506">附录-JS-SDK使用权限签名算法</a>
</p>
<blockquote>
<p>注意，参数agentid为企业微信的
<a target="_blank" href="https://open.work.weixin.qq.com/api/doc/90000/90135/90665#agentid">应用id</a>
</p>
</blockquote>

<p><strong>agentConfig的作用</strong>
<br/>
config注入的是企业的身份与权限，而agentConfig注入的是应用的身份与权限。尤其是当调用者为第三方服务商时，通过config无法准确区分出调用者是哪个第三方应用，而在部分场景下，又必须严谨区分出第三方应用的身份，此时即需要通过agentConfig来注入应用的身份信息。
</p>
<p><strong>调用agentConfig的注意事项</strong></p>
<ol>
<li>agentConfig与config的签名算法完全一样，但是jsapi_ticket的获取方法不一样，请特别注意，查看 <a target="_blank" href="https://work.weixin.qq.com/api/doc/90001/90144/90539#%E8%8E%B7%E5%8F%96%E5%BA%94%E7%94%A8%E7%9A%84jsapi_ticket">获取应用身份的ticket</a>.</li>
<li>调用wx.agentConfig之前，必须确保先成功调用wx.config.  注意：从企业微信3.0.24及以后版本（可通过<a target="_blank" href="https://open.work.weixin.qq.com/api/doc/90000/90139/90315#%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%9A%84UA">企业微信UA</a>判断版本号），无须先调用wx.config，可直接wx.agentConfig. </li>
<li>当前页面url中的域名必须是在该应用中设置的可信域名。 </li>
<li>agentConfig仅在企业微信2.5.0及以后版本支持，微信客户端不支持（微信开发者工具也不支持）</li>
<li>仅部分接口才需要调用agentConfig，需注意每个接口的说明</li>
</ol>
            </field>
        </record>

        <record id="wxwork_jsapi_base_checkJsApi" model="wxwork.jsapi.interface">
            <field name="name">获取进入H5页面的入口环境</field>
            <field name="function_name"></field>
            <field name="type">base</field>
            <field name="example" type="html">
<pre>
wx.invoke('getContext', {
    }, function(res){
    if(res.err_msg == "getContext:ok"){
        entry  = res.entry ; //返回进入H5页面的入口类型，目前有normal、contact_profile、single_chat_tools、group_chat_tools、chat_attachment
        shareTicket = res.shareTicket; //可用于调用getShareInfo接口
    }else {
        //错误处理
    }
});

</pre>
            </field>
            <field name="description"></field>
        </record>

    </data> 
</odoo>